#!/bin/bash
#
# dvolbar - OSD Volume utility 
#
source /home/sunn/.scripts/bar/config.sh

#Customize this stuff
SECS="1"            # sleep $SECS
#background="#ff9900"        # background colour of window
#foreground="#ffffff"        # foreground colour of text/icon
#bar_fg="#ffffff"    # foreground colour of volume bar
#bar_bg="#444444"    # background colour of volume bar
XPOS="550"          # horizontal positioning
YPOS="400"          # vertical positioning
HEIGHT="30"         # window height
WIDTH="250"         # window width
BAR_WIDTH="165"     # width of volume bar
ICON=~/.icons/brightness.xbm
FONT="-*-limey-*-*-*-*-*-*-*-*-*-*-*-*"
brightness="/sys/class/backlight/intel_backlight/brightness"
presbright=`cat /sys/class/backlight/intel_backlight/brightness`
perc=`expr $presbright "*" 100 "/" 3000`
sudopass="PASSWORD"

#Probably do not customize
PIPE="/tmp/dvolpipe"

err() {
  echo "$1"
  exit 1
}

usage() {
  echo "usage: brightness [option] [argument]"
  echo
  echo "Options:"
  echo "     -i, --increase - increase brightness by \`argument'"
  echo "     -d, --decrease - decrease brightness by \`argument'"
  echo "     -h, --help     - display this"
  exit
}

#Argument Parsing
case "$1" in
  '-i'|'--increase')
    [ -z "$2" ] && err "No argument specified for increase."
    [ -n "$(tr -d [0-9] <<<$2)" ] && err "The argument needs to be an integer."
    echo $sudopass | sudo -S sh -c "echo $(( ${presbright} + ${2} )) > $brightness"
    ;;
  '-d'|'--decrease')
    [ -z "$2" ] && err "No argument specified for decrease."
    [ -n "$(tr -d [0-9] <<<$2)" ] && err "The argument needs to be an integer."
    echo $sudopass | sudo -S sh -c "echo $(( ${presbright} - ${2} )) > $brightness"
    ;;
  ''|'-h'|'--help')
    usage
    ;;
  *)
    err "Unrecognized option \`$1', see brightness --help"
    ;;
esac
presbright=`cat /sys/class/backlight/intel_backlight/brightness`
perc=`expr $presbright "*" 100 "/" 3000`
#Using named pipe to determine whether previous call still exists
#Also prevents multiple volume bar instances
if [ ! -e "$PIPE" ]; then
  mkfifo "$PIPE"
  (dzen2 -tw "$WIDTH" -h "$HEIGHT" -x "$XPOS" -y "$YPOS" -fn "$FONT" -bg "$background" -fg "$foreground" < "$PIPE" 
   rm -f "$PIPE") &
fi

#Feed the pipe!
(echo "$perc" | gdbar -l "^i(${ICON})    " -fg "$bar_fg" -bg "$bar_bg" -w "$BAR_WIDTH" ; sleep "$SECS") > "$PIPE"
